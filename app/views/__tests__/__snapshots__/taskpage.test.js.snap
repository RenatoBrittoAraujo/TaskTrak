// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "padding": 7,
    }
  }
>
  <View>
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      transparent={true}
      visible={false}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "marginTop": 22,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fafafa",
              "borderRadius": 5,
              "elevation": 4,
              "margin": 10,
              "padding": 10,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.25,
              "shadowRadius": 3.84,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            onChangeText={[Function]}
            placeholder="Task..."
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#ccc",
                "borderRadius": 10,
                "borderWidth": 1,
                "height": 40,
                "marginBottom": 5,
                "width": 200,
              }
            }
            underlineColorAndroid="transparent"
          />
          <View
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="ios_touchable_wrapper"
            >
              <View
                pointerEvents="box-only"
              >
                <TextInput
                  allowFontScaling={true}
                  editable={false}
                  rejectResponderTermination={true}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "#c7c7cd",
                      },
                    ]
                  }
                  testID="text_input"
                  underlineColorAndroid="transparent"
                  value="Daily"
                />
              </View>
            </View>
            <Modal
              hardwareAccelerated={false}
              onOrientationChange={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "landscape",
                ]
              }
              testID="ios_modal"
              transparent={true}
              visible={false}
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "opacity": 1,
                  }
                }
                testID="ios_modal_top"
              />
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#f8f8f8",
                      "borderTopColor": "#dedede",
                      "borderTopWidth": 1,
                      "flexDirection": "row",
                      "height": 45,
                      "justifyContent": "space-between",
                      "paddingHorizontal": 10,
                      "zIndex": 2,
                    },
                    undefined,
                  ]
                }
                testID="input_accessory_view"
              >
                <View
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderColor": "#a1a1a1",
                            "borderRightWidth": 1.5,
                            "borderTopWidth": 1.5,
                            "height": 15,
                            "width": 15,
                          },
                          undefined,
                          Object {
                            "marginLeft": 11,
                            "transform": Array [
                              Object {
                                "translateY": 4,
                              },
                              Object {
                                "rotate": "-45deg",
                              },
                            ],
                          },
                          undefined,
                          Object {},
                        ]
                      }
                    />
                  </View>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderColor": "#a1a1a1",
                            "borderRightWidth": 1.5,
                            "borderTopWidth": 1.5,
                            "height": 15,
                            "width": 15,
                          },
                          undefined,
                          Object {
                            "marginLeft": 22,
                            "transform": Array [
                              Object {
                                "translateY": -5,
                              },
                              Object {
                                "rotate": "135deg",
                              },
                            ],
                          },
                          undefined,
                          Object {},
                        ]
                      }
                    />
                  </View>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="done_button"
                >
                  <View
                    testID="needed_for_touchable"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "#007aff",
                            "fontSize": 17,
                            "fontWeight": "600",
                            "paddingRight": 11,
                            "paddingTop": 1,
                          },
                          undefined,
                          Object {},
                        ]
                      }
                      testID="done_text"
                    >
                      Done
                    </Text>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#d0d4da",
                      "justifyContent": "center",
                    },
                    Object {
                      "height": 215,
                    },
                    undefined,
                  ]
                }
              >
                <View>
                  <RCTPicker
                    items={
                      Array [
                        Object {
                          "label": "Daily",
                          "textColor": undefined,
                          "value": 86400000,
                        },
                        Object {
                          "label": "Hourly",
                          "textColor": undefined,
                          "value": 3600000,
                        },
                        Object {
                          "label": "Weekly",
                          "textColor": undefined,
                          "value": 604800000,
                        },
                        Object {
                          "label": "Monthly",
                          "textColor": undefined,
                          "value": 2588544000,
                        },
                        Object {
                          "label": "Yearly",
                          "textColor": undefined,
                          "value": 31062528000,
                        },
                      ]
                    }
                    onChange={[Function]}
                    selectedIndex={0}
                    style={
                      Array [
                        Object {
                          "height": 216,
                        },
                        undefined,
                      ]
                    }
                    testID="ios_picker"
                  />
                </View>
              </View>
            </Modal>
          </View>
          <Text>
            How many times?
          </Text>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "borderColor": "#d4d4d4",
                  "height": 88,
                  "width": 220,
                },
                Object {
                  "borderRadius": 15.84,
                },
                Object {},
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "borderBottomLeftRadius": 15.84,
                  "borderTopLeftRadius": 15.84,
                  "borderWidth": 0,
                  "height": 86,
                  "justifyContent": "center",
                  "left": 0,
                  "opacity": 1,
                  "position": "absolute",
                  "width": 66,
                  "zIndex": -1,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 33.44,
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "fontWeight": "900",
                      },
                      Object {},
                      Object {},
                      Object {},
                    ],
                    Object {
                      "fontFamily": "Ionicons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "center",
                    "borderLeftColor": "#d4d4d4",
                    "borderLeftWidth": 1,
                    "borderRightColor": "#d4d4d4",
                    "borderRightWidth": 1,
                  },
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                editable={true}
                keyboardType="numeric"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                rejectResponderTermination={true}
                returnKeyType="done"
                style={
                  Array [
                    Object {
                      "padding": 0,
                      "textAlign": "center",
                    },
                    Object {
                      "borderLeftColor": "#d4d4d4",
                      "borderLeftWidth": 1,
                      "borderRightColor": "#d4d4d4",
                      "borderRightWidth": 1,
                      "color": "black",
                      "fontSize": 33.44,
                      "height": 88,
                      "width": 88,
                    },
                    Object {},
                  ]
                }
                underlineColorAndroid="rgba(0,0,0,0)"
                value="1"
              />
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "borderBottomRightRadius": 15.84,
                  "borderTopRightRadius": 15.84,
                  "borderWidth": 0,
                  "height": 86,
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "right": 0,
                  "width": 66,
                  "zIndex": -1,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 33.44,
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "fontWeight": "900",
                      },
                      Object {},
                      Object {},
                      Object {},
                    ],
                    Object {
                      "fontFamily": "Ionicons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#2196F3",
                "borderRadius": 20,
                "elevation": 2,
                "marginTop": 10,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
            >
              Add Task
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#2196F3",
                "borderRadius": 20,
                "elevation": 2,
                "marginTop": 10,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </Modal>
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      transparent={true}
      visible={false}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "marginTop": 22,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fafafa",
              "borderRadius": 5,
              "elevation": 4,
              "margin": 10,
              "padding": 10,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.25,
              "shadowRadius": 3.84,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            onChangeText={[Function]}
            placeholder="Task..."
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#ccc",
                "borderRadius": 10,
                "borderWidth": 1,
                "height": 40,
                "marginBottom": 5,
                "width": 200,
              }
            }
            underlineColorAndroid="transparent"
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#2196F3",
                "borderRadius": 20,
                "elevation": 2,
                "marginTop": 10,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
            >
              Add Task
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#2196F3",
                "borderRadius": 20,
                "elevation": 2,
                "marginTop": 10,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </Modal>
  </View>
  <View>
    <View
      style={
        Object {
          "margin": 4,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={Object {}}
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Frequent
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "margin": 4,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={Object {}}
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            One Shot
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "padding": 6,
      }
    }
  >
    <View
      style={
        Object {
          "borderBottomWidth": 2,
          "borderColor": "#aaa",
          "borderWidth": 1,
          "flexDirection": "row",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#e1e1f4",
            "flex": 1,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignContent": "center",
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 5,
              },
              Object {
                "borderColor": "#aaa",
                "borderRightWidth": 1,
              },
            ]
          }
        >
          <Text>
            Frequent (0/0)
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#e1e1f4",
            "flex": 1,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignContent": "center",
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 5,
              },
              Object {
                "borderColor": "#aaa",
                "borderLeftWidth": 1,
              },
            ]
          }
        >
          <Text>
            One Shot (0)
          </Text>
        </View>
      </View>
    </View>
    <RCTScrollView
      style={
        Object {
          "height": 430,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "backgroundColor": "#eaeaea",
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 10,
              "padding": 10,
            }
          }
        >
          <Text>
             Fill this list with tasks you should do! 
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
